[{"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\index.js":"1","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\App.js":"2","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\pages\\SavedBooks.js":"4","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\pages\\SearchBooks.js":"5","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\auth.js":"8","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\localStorage.js":"9","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\mutations.js":"10","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\API.js":"11"},{"size":266,"mtime":1686315567120,"results":"12","hashOfConfig":"13"},{"size":818,"mtime":1686465331960,"results":"14","hashOfConfig":"13"},{"size":2567,"mtime":1686315567120,"results":"15","hashOfConfig":"13"},{"size":3005,"mtime":1686315567121,"results":"16","hashOfConfig":"13"},{"size":4587,"mtime":1686467658387,"results":"17","hashOfConfig":"13"},{"size":3319,"mtime":1686315567120,"results":"18","hashOfConfig":"13"},{"size":2651,"mtime":1686315567119,"results":"19","hashOfConfig":"13"},{"size":1234,"mtime":1686315567122,"results":"20","hashOfConfig":"13"},{"size":793,"mtime":1686315567122,"results":"21","hashOfConfig":"13"},{"size":1182,"mtime":1686467240364,"results":"22","hashOfConfig":"13"},{"size":1392,"mtime":1686315567121,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9g5743",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\index.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\App.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\pages\\SavedBooks.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\pages\\SearchBooks.js",["59"],[],"import React, { useState, useEffect } from 'react';\nimport { Container, Col, Form, Button, Card, Row } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { searchGoogleBooks } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook , { error }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    try {\n      await saveBook({\n        variables: { input: bookToSave },\n      });\n  \n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <div className='text-light bg-dark pt-5'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </div>\n\n      <Container>\n        <h2 className='pt-5'>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <Row>\n          {searchedBooks.map((book) => {\n            return (\n              <Col md=\"4\">\n                <Card key={book.bookId} border='dark'>\n                  {book.image ? (\n                    <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                  ) : null}\n                  <Card.Body>\n                    <Card.Title>{book.title}</Card.Title>\n                    <p className='small'>Authors: {book.authors}</p>\n                    <Card.Text>{book.description}</Card.Text>\n                    {Auth.loggedIn() && (\n                      <Button\n                        disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                        className='btn-block btn-info'\n                        onClick={() => handleSaveBook(book.bookId)}>\n                        {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                          ? 'This book has already been saved!'\n                          : 'Save this Book!'}\n                      </Button>\n                    )}\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\SignupForm.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\components\\LoginForm.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\auth.js",["60"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\Derek\\OneDrive\\Desktop\\Modules\\Book-Search-Engine\\client\\src\\utils\\API.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":18,"column":23,"nodeType":"63","messageId":"64","endLine":18,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":49,"column":1,"nodeType":"67","endLine":49,"endColumn":34},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]